---
title: "Bee Species"
author: "Sophia Yao"
format: html
---

```{r}
#| label: setup
#| message: false
#| cache: true
#| include: false

library(tidyverse)
library(brms)
library(gtsummary)
library(tidybayes)

# Function to standardize common names
standardize_common_name <- function(name) {
  name <- tolower(name) # Convert to lower case
  name <- gsub(" ", "_", name) # Replace spaces with underscores
  return(name)
}

# Load and preprocess data
bee_data <- read_csv("data/bee_data.csv") |>
  rename(
    CollectedInOn = `Collected InOn`,
    CommonName = `Common name`,
    IDby = `ID by`,
    ScientificName = `Scientific name`
  ) |>
  mutate(Date = as.Date(Date, format = "%m/%d/%Y")) |>
  mutate(
    Year = as.numeric(format(Date, "%Y")),
    Month = as.numeric(format(Date, "%m")),
    Day = as.numeric(format(Date, "%d"))
  ) |>
  select(-Date) |>
  mutate(
    CommonName = standardize_common_name(CommonName),
    across(
      c(Location, CollectedInOn, Collectors, Sex, Family, CommonName, IDby, Notes),
      as.factor
    ),
    ScientificName = as.factor(ScientificName)
  )
```

```{r}
#| cache: true

fit <- brm(
  formula = ScientificName ~ Location + Latitude + Longitude + Year + Month + Day + 
             CollectedInOn + Collectors + Sex + Family + CommonName + IDby + Notes,
  data = bee_data,
  family = categorical(),
  refresh = 0,
  silent = 2,
  seed = 123
)
```

```{r}
#| cache: true

# Predictive model using new data
new_data <- data.frame(
  Location = factor("Cajun Prairie Farms old field", levels = levels(bee_data$Location)),
  Latitude = 30.403897,
  Longitude = -91.993592,
  Year = 2024,
  Month = 7,
  Day = 22,
  CollectedInOn = factor("pan trap", levels = levels(bee_data$CollectedInOn)),
  Collectors = factor("Larry Allain", levels = levels(bee_data$Collectors)),
  Sex = factor("F", levels = levels(bee_data$Sex)),
  Family = factor("Megachilidae", levels = levels(bee_data$Family)),
  CommonName = factor("Blue_metallic_bee", levels = levels(bee_data$CommonName)),
  IDby = factor("Brittany Owens", levels = levels(bee_data$IDby)),
  Notes = factor("nd", levels = levels(bee_data$Notes))
)

# Obtain predictions
predictions <- add_epred_draws(fit, newdata = new_data)

predictions

# Example: Density Plot
density_plot <- ggplot(predictions, aes(x = .epred, fill = .category)) +
  geom_density(alpha = 0.7) +
  labs(title = "Predicted Scientific Name Distributions", x = "Predicted Probability", y = "Density") +
  theme_minimal()

# Example: Interval Plot
pred_interval <- predictions |>
  group_by(.category) |>
  summarise(
    lower = quantile(.epred, 0.025),
    upper = quantile(.epred, 0.975),
    median = median(.epred)
  )

interval_plot <- ggplot(pred_interval, aes(x = .category, y = median)) +
  geom_point() +
  geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
  labs(title = "Prediction Intervals for Scientific Names", x = "Scientific Name", y = "Predicted Probability") +
  theme_minimal()

# Print plots
density_plot
interval_plot
```

